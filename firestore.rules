// firestore.rules (completo, con permisos para admins y guard)
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /chatMessages/{docId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }

    match /ranking/{uid} {
      allow read: if true;
      allow create, update: if request.auth != null
                            && request.auth.uid == uid
                            && request.resource.data.uid == uid;
      allow delete: if false;
    }

    match /resultados/{docId} {
      allow read: if true;
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
      allow update, delete: if false;
    }

    // Encuestas: lectura SOLO admin (por claim o por doc /admins/{uid})
    match /encuestas/{docId} {
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;

      allow read: if request.auth != null && (
        request.auth.token.admin == true ||
        exists(/databases/$(database)/documents/admins/$(request.auth.uid))
      );

      allow update, delete: if false;
    }

    // Colección de admins (para el guard)
    match /admins/{uid} {
      // el propio usuario puede leerse a sí mismo (lo usa el guard)
      allow read: if request.auth != null && request.auth.uid == uid;
      allow create, update, delete: if false; // administrar por consola/scripts
    }

    match /loginLogs/{docId} {
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid;
      allow read, update, delete: if false;
    }
  }
}
